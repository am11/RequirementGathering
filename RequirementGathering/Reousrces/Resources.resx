<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddRating" xml:space="preserve">
    <value>Ratings successfully submitted.</value>
    <comment>Flash Message</comment>
  </data>
  <data name="AgeDisplay" xml:space="preserve">
    <value>Age</value>
    <comment>Display Name</comment>
  </data>
  <data name="AttributesCountValidation" xml:space="preserve">
    <value>You must at least have two attributes to create an evaluation.</value>
    <comment>Validation</comment>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Your password has been changed.</value>
    <comment>Flash Message</comment>
  </data>
  <data name="CityDisplay" xml:space="preserve">
    <value>City</value>
    <comment>Display Name</comment>
  </data>
  <data name="CompanyNameDisplay" xml:space="preserve">
    <value>Company Name</value>
    <comment>Display Name</comment>
  </data>
  <data name="ConfirmPasswordDisplay" xml:space="preserve">
    <value>Confirm Password</value>
    <comment>Display Name</comment>
  </data>
  <data name="CountryDisplay" xml:space="preserve">
    <value>Country</value>
    <comment>Display Name</comment>
  </data>
  <data name="CreateEvaluation" xml:space="preserve">
    <value>Evaluation created successfully.</value>
    <comment>Flash Message</comment>
  </data>
  <data name="CreateProduct" xml:space="preserve">
    <value>Product created successfully.</value>
    <comment>Flash Message</comment>
  </data>
  <data name="CreateUser" xml:space="preserve">
    <value>User created successfully.</value>
    <comment>Flash Message</comment>
  </data>
  <data name="DescriptionDisplay" xml:space="preserve">
    <value>Description</value>
    <comment>Display Name</comment>
  </data>
  <data name="DesignationDisplay" xml:space="preserve">
    <value>Designation</value>
    <comment>Display Name</comment>
  </data>
  <data name="DistrictDisplay" xml:space="preserve">
    <value>District</value>
    <comment>Display Name</comment>
  </data>
  <data name="EmailAlreadyTaken" xml:space="preserve">
    <value>Email address is already taken.</value>
    <comment>Validation</comment>
  </data>
  <data name="EmailDisplay" xml:space="preserve">
    <value>Email</value>
    <comment>Display Name</comment>
  </data>
  <data name="EmailInvalid" xml:space="preserve">
    <value>Email is not valid.</value>
    <comment>Validation</comment>
  </data>
  <data name="FieldLengthMax" xml:space="preserve">
    <value>{0} can not be longer than {1} characters.</value>
    <comment>Validation</comment>
  </data>
  <data name="FieldLengthMin" xml:space="preserve">
    <value>{0} must be at least {1} characters long.</value>
    <comment>Validation</comment>
  </data>
  <data name="FieldRangeMinMax" xml:space="preserve">
    <value>The {0} must be at least {2} and at most {1}.</value>
    <comment>Validation</comment>
  </data>
  <data name="FieldRequired" xml:space="preserve">
    <value>{0} is required.</value>
    <comment>Validation</comment>
  </data>
  <data name="FirstNameDisplay" xml:space="preserve">
    <value>First Name</value>
    <comment>Display Name</comment>
  </data>
  <data name="Headline" xml:space="preserve">
    <value>Web tool for gathering customer requirements</value>
    <comment>Main Page</comment>
  </data>
  <data name="ImageUploadFailed" xml:space="preserve">
    <value>Error uploading image file.</value>
    <comment>Validation</comment>
  </data>
  <data name="ImageUploadFormat" xml:space="preserve">
    <value>Invalid image format.</value>
    <comment>Vaidation</comment>
  </data>
  <data name="InvalidRoleAssignment" xml:space="preserve">
    <value>You cannot create a user with role: {0}.</value>
    <comment>Validation</comment>
  </data>
  <data name="InvitationEmailBodyExisting" xml:space="preserve">
    <value>You are invited for evaluation. Please login to {0}/{1}/Account/Login with your email address and password.&lt;br/&gt;&lt;br/&gt;{2}</value>
    <comment>Evaluation</comment>
  </data>
  <data name="InvitationEmailBodyNew" xml:space="preserve">
    <value>You are invited for evaluation. Please login to {0}/{1}/Account/Login with your email address and password: &lt;b&gt;{2}&lt;/b&gt;.&lt;br/&gt;&lt;br/&gt;{3}</value>
    <comment>Evaluation</comment>
  </data>
  <data name="InvitationEmailSubject" xml:space="preserve">
    <value>Invitation for Evaluation: {0} {1}</value>
    <comment>Evaluation</comment>
  </data>
  <data name="InvitationSent" xml:space="preserve">
    <value>Invitation sent successfully.</value>
    <comment>Flash Message</comment>
  </data>
  <data name="IsActiveDisplay" xml:space="preserve">
    <value>Is Active</value>
    <comment>Display Name</comment>
  </data>
  <data name="LastNameDisplay" xml:space="preserve">
    <value>Last Name</value>
    <comment>Display Name</comment>
  </data>
  <data name="MinRoleAssignment" xml:space="preserve">
    <value>You need to assign at least one role.</value>
    <comment>Validation</comment>
  </data>
  <data name="NameDisplay" xml:space="preserve">
    <value>Name</value>
    <comment>Display Name</comment>
  </data>
  <data name="OrganizationNameDisplay" xml:space="preserve">
    <value>Organization</value>
    <comment>Display Name</comment>
  </data>
  <data name="PasswordDisplay" xml:space="preserve">
    <value>Password</value>
    <comment>Display Name</comment>
  </data>
  <data name="PhoneNumberDisplay" xml:space="preserve">
    <value>Phone or Mobile number</value>
    <comment>Display</comment>
  </data>
  <data name="PostalCodeDisplay" xml:space="preserve">
    <value>Postal Code</value>
    <comment>Display Name</comment>
  </data>
  <data name="ProvinceDisplay" xml:space="preserve">
    <value>Province</value>
    <comment>Display Name</comment>
  </data>
  <data name="RememberDisplay" xml:space="preserve">
    <value>Remember Me?</value>
    <comment>Display Name</comment>
  </data>
  <data name="RolesDisplay" xml:space="preserve">
    <value>Roles</value>
    <comment>Display Name</comment>
  </data>
  <data name="StreetDisplay" xml:space="preserve">
    <value>Street</value>
    <comment>Display Name</comment>
  </data>
  <data name="UpdateEvaluation" xml:space="preserve">
    <value>Evaluation updated successfully.</value>
    <comment>Flash Message</comment>
  </data>
  <data name="UpdateProduct" xml:space="preserve">
    <value>Product updated successfully.</value>
    <comment>Flash Message</comment>
  </data>
  <data name="UpdateProfile" xml:space="preserve">
    <value>Your profile has been updated.</value>
    <comment>Flash Message</comment>
  </data>
  <data name="UpdateUser" xml:space="preserve">
    <value>User updated successfully.</value>
    <comment>Flash Message</comment>
  </data>
  <data name="VersionDisplay" xml:space="preserve">
    <value>Version</value>
    <comment>Display Name</comment>
  </data>
</root>