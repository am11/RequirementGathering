@model Evaluation
@{
    var descriptionValue = Resource.GetPropertyValue<Evaluation>(Model.Id, "Description");
}

<div class="form-group">
    @Html.LabelFor(model => model.Version, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Version, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Version, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @value = descriptionValue } })
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        <div class="checkbox">
            @Html.EditorFor(model => model.IsActive)
            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ProductId, "Product", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownList("ProductId", null, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    <label class="control-label col-md-2" for="ProductVersionImage">Product Image for this Version</label>
    <div class="col-md-10">
        @if (!string.IsNullOrEmpty(Model.ImageUrl))
        {
            <div class="image-wrapper">
                <button type="button" id="changeImage" class="btn-link btn">Change Image</button><br />
                <img src="@Model.ImageUrl" id="imageFile" name="ImageFile" />
                <input type="hidden" value="no" id="fileRemoved" name="FileRemoved" />
            </div>
        }
        <div class="@(string.IsNullOrEmpty(Model.ImageUrl) ? "" : "hidden")">
            <a class='btn btn-primary' href='javascript:;'>
                @Resources.ChooseFile...
                <input name="ProductVersionImage" id="productVersionImage" type="file" size="40">
            </a>
            &nbsp;
            <span class='label label-info' id="upload-file-info"></span>
        </div>
        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="ProductVersionImage"></span>
        <input type="hidden" name="ImageUrl" value="@Model.ImageUrl" />
    </div>
</div>

<hr />

<h4>Manage Attributes</h4>
<hr />

@Html.ValidationMessageFor(ea => ea.Attributes, "", new { @class = "text-danger" })
<br /><br />

<div class="row">
    <div class="col-lg-12 col-md-12">
        @if (!Model.Attributes.Any())
        {
            @Html.Partial("_AttributeRow", Model.Attributes.First())
        }
        else
        {
            @Html.EditorFor(model => model.Attributes)
        }
    </div>
</div>
