@model RequirementGathering.Models.Attribute

@{
    var attributeValue = !Model.Id.HasValue ? string.Empty : Resource.GetPropertyValue<RequirementGathering.Models.Attribute>(Model.Id.Value, "Name");
}

<div class="form-group">
    @Html.LabelFor(model => model.Name, " ", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-3">
        @if (ViewBag.EvaluationIsFreezed)
        {
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @Name = "Attributes[].Name", @class = "form-control", @disabled = "disabled", @Value = attributeValue } })
        }
        else
        {
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @Name = "Attributes[].Name", @class = "form-control", @Value = attributeValue } })
        }
        @Html.ValidationMessageFor(model => model, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id, new { @Name = "Attributes[].Id" })
    </div>
    @if (!ViewBag.EvaluationIsFreezed)
    {
        <div class="col-md-3">
            <button type="button" class="add btn btn-primary">
                <i class="glyphicon-plus glyphicon"></i>
            </button>
            <button type="button" class="remove btn btn-primary">
                <i class="glyphicon-minus glyphicon"></i>
            </button>&nbsp;&nbsp;
            <button type="button" class="up btn btn-primary">
                <i class="glyphicon glyphicon-arrow-up glyphicon"></i>
            </button>
            <button type="button" class="down btn btn-primary">
                <i class="glyphicon glyphicon-arrow-down glyphicon"></i>
            </button>
            <input type="hidden" name="Attributes[].Order" />
        </div>
    }
</div>
